<UserControl
    x:Class="GZ_SpotGateEx.UCChannel"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:GZ_SpotGateEx"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Height="50"
    d:DesignHeight="300"
    d:DesignWidth="300"
    mc:Ignorable="d">
    <UserControl.Resources>
        <Style TargetType="TextBox">
            <Setter Property="Height" Value="24" />
            <Setter Property="Margin" Value="10,0,0,0" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>

        <Style TargetType="Label">
            <Setter Property="Width" Value="82" />
            <Setter Property="Margin" Value="5,0,0,0" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
        </Style>

        <Style TargetType="CheckBox">
            <Setter Property="Width" Value="60" />
            <Setter Property="Margin" Value="5,0,0,0" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>

        <local:InouttypeConverter x:Key="inoutconvert" />
        <local:IHoldConverter x:Key="holdconverter" />
    </UserControl.Resources>
    <StackPanel HorizontalAlignment="Center">
        <StackPanel Margin="0,5,0,0" Orientation="Horizontal">

            <Label Width="50" Content="{Binding No}" />
            <TextBox Width="130" Text="{Binding Name}" />
            <Label Content="{Binding ClientIp}" />
            <!--<TextBlock Text="{Binding VirtualIp}" />-->
            <Label Content="{Binding FaceInIp}" />
            <Label Content="{Binding CameraInIp}" />
            <Label Content="{Binding PadInIp}" />
            <CheckBox IsChecked="{Binding InHold, Converter={StaticResource holdconverter}, Mode=TwoWay}" />
            <Label Content="{Binding FaceOutIp}" />
            <Label Content="{Binding CameraOutIp}" />
            <Label Content="{Binding PadOutIp}" />
            <CheckBox IsChecked="{Binding OutHold, Converter={StaticResource holdconverter}, Mode=TwoWay}" />
            <Button
                Width="50"
                Height="24"
                Click="btnReboot_Click"
                Content="重启">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border
                                        Name="border"
                                        BorderBrush="Green"
                                        BorderThickness="1">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter TargetName="border" Property="Background" Value="#f3f3f3" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Button.Style>
            </Button>

            <StackPanel
                Width="130"
                VerticalAlignment="Center"
                Orientation="Horizontal">
                <RadioButton
                    Name="rbIn"
                    VerticalAlignment="Center"
                    Content="入"
                    IsChecked="True" />
                <RadioButton
                    Name="rbOut"
                    VerticalAlignment="Center"
                    Content="出" />
                <Button
                    Width="50"
                    Height="24"
                    Margin="10,0,0,0"
                    Click="btnOpen_Click"
                    Content="开闸">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Border
                                            Name="border"
                                            BorderBrush="Green"
                                            BorderThickness="1">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="true">
                                                <Setter TargetName="border" Property="Background" Value="#f3f3f3" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>

            <TextBlock
                Width="130"
                Margin="10,0,0,0"
                VerticalAlignment="Center"
                Foreground="White"
                Text="{Binding LastHeartbeat}">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsTimeOut}" Value="true">
                                <Setter Property="Background" Value="Red" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsTimeOut}" Value="false">
                                <Setter Property="Background" Value="Green" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>

        </StackPanel>
        <Separator Margin="0,8,0,0" Background="#FFCCCCCC" />
    </StackPanel>
</UserControl>
